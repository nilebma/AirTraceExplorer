<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 borderVisible="false" creationComplete="onCreationCompleteHandler(event)">
	<mx:Script>
		<![CDATA[
			import com.ithaca.traces.Attribute;
			import com.ithaca.traces.Obsel;
			import com.ithaca.traces.Relation;
			import com.ithaca.traces.utils.RDFconverter;
			
			import mx.binding.utils.BindingUtils;
			import mx.containers.Form;
			import mx.containers.FormItem;
			import mx.controls.HRule;
			import mx.controls.TextArea;
			import mx.controls.TextInput;
			import mx.events.FlexEvent;
			
			import spark.formatters.DateTimeFormatter;
			
			protected function onCreationCompleteHandler(event:FlexEvent):void
			{
				//On préfère un affichage différent avec une date
				//addField((data as Obsel).obselType,"label","type");
				//addField(data,"begin");
				//addField(data,"end");
				addDate(data);
				
				addField(data,"subject");
				
				obsForm.addChild(new HRule());
				
				for each(var yo:Attribute in (data as Obsel).attributes)
					addField(yo,"value",yo.attributeType.label);
					
				obsForm.addChild(new HRule());
				
				//for each(var r:Relation in (data as Obsel).outcomingRelations)
				//	addField(r.targetObsel,"uri",r.relationType.label, false);

				
	
				
			}
			
			protected function addDate(host:Object, displayDate:Boolean = true):void
			{
				if(displayDate){
					var frmItem:FormItem = new FormItem();
					frmItem.direction = "horizontal";
					var endDate:int = parseInt(host["end"]);
					var beginDate:int = parseInt(host["begin"]);
					var resultatDate:String;
					var date:Date;
					var dtf:DateTimeFormatter = new DateTimeFormatter();
					dtf.setStyle('locale','fr-FR');
					dtf.dateTimePattern='EEEE dd MMMM - hh:mm:ss';
					
					//on récupère la date de début
					date = new Date(parseInt(host["begin"]));
					resultatDate = dtf.format(date);
					
					//si la date de fin est plus ou moins 500ms après le début, on affiche en plus la date de fin
					if(endDate > (beginDate + 500)){
						date = new Date(parseInt(host["end"]));
						dtf.setStyle('locale','fr-FR');
						dtf.dateTimePattern='hh:mm:ss';
						resultatDate += (" à " + dtf.format(date));
					}
					
					frmItem.label = resultatDate;
					
					obsForm.addChild(frmItem);
				}
			}
			protected function addField(host:Object,chain:String, title:String=null, editable:Boolean = true):void
			{
				if(!title)
					title = chain;
				
				var frmItem:FormItem = new FormItem();
				frmItem.direction = "horizontal";
				frmItem.label = title;
				//@TODO testé les propriétés de frmItem ainsi que celles du form obsForm
				
				var tb:TextArea = new TextArea();
				tb.text = host[chain];
				tb.id = chain;
				tb.editable = editable;
				tb.maxWidth = 200;
				frmItem.addChild(tb);
				
				tb.addEventListener(FlexEvent.CREATION_COMPLETE, onTextAreaDataChange);
				tb.addEventListener(FlexEvent.DATA_CHANGE, onTextAreaDataChange);
				
				if(editable)
				{
					BindingUtils.bindProperty(tb, "text", host, chain);
					BindingUtils.bindProperty(host, chain, tb, "text");
				}
				
				
				obsForm.addChild(frmItem);
			}
			
			private function onTextAreaDataChange(e:FlexEvent) :void
			{
				if(e.currentTarget && e.currentTarget is mx.controls.TextArea){
					resizeMe(e.currentTarget as TextArea);
				}
			}
			
			private function resizeMe(field:TextArea) :void
			{
				field.validateNow();
				//field.mx_internal::getTextField().autoSize = TextFieldAutoSize.LEFT;
				field.height = Math.min(55, field.textHeight + 5);
				
			}
			
			protected function onTextInputChange(e:Event)
			{
				
			}

		]]>
	</mx:Script>
	<mx:VBox width="50%">
	<mx:Form id="obsForm" backgroundColor="#F5CC3F" borderAlpha="0.27" borderColor="#A5A3A3"
			 borderStyle="solid" borderVisible="true" cornerRadius="10" dropShadowVisible="false"
			 paddingBottom="0" paddingLeft="2" paddingRight="2" paddingTop="0">
		<mx:FormHeading label="{(data as Obsel).obselType.label}" fontWeight="bold"/>
	</mx:Form>
	</mx:VBox>
</mx:HBox>
