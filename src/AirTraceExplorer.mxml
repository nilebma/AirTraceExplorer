<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   xmlns:media="ui.media.*"
					   xmlns:mediaservice="services.mediaservice.*"
					   xmlns:timelineManager="ui.timelineManager.*"
					   xmlns:screenshotservice="services.screenshotservice.*"
					   xmlns:traceservice="services.traceservice.*"
					   xmlns:trace="ui.trace.*"
					   xmlns:test="ui.test.*"
					   xmlns:timeline="ui.timeline.*"
					   xmlns:timelineservice="services.timelineservice.*"
					   width="1000" height="800"
					   initialize="windowedapplication1_initializeHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.ithaca.traces.Base;
			import com.ithaca.traces.Ktbs;
			import com.ithaca.traces.Model;
			import com.ithaca.traces.Obsel;
			import com.ithaca.traces.Resource;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.utils.StringUtil;
			
			import services.TtlLoader;
			
			import spark.events.IndexChangeEvent;
			
			import valueObjects.Timeline;
			import valueObjects.VOScreenshot;
			import valueObjects.VOTrace;
			
			[Bindable]
			public var theKtbs:Ktbs;
			
			[Bindable]
			public var theBase:Base;
			
			[Bindable]
			public var theModel:Model;
			
			[Bindable]
			public var theTraceLoader:TtlLoader = new TtlLoader();
			
			protected function dataGrid_creationCompleteHandler(event:FlexEvent):void
			{
				getAllScreenshotResult.token = screenshotService.getAllScreenshot();
			}
			
			
			
			protected function windowedapplication1_initializeHandler(event:FlexEvent):void
			{
				theKtbs = new Ktbs("uriKtbs", Resource.RESOURCE_URI_ATTRIBUTION_POLICY_CLIENT_IS_KING);
				theBase = this.theKtbs.createBase();
                theModel = theBase.createModel();
			}
			
			protected function enrich_btn_clickHandler(event:MouseEvent):void
			{
				if(getAllScreenshotResult.lastResult)
				{
					for each(var s:VOScreenshot in getAllScreenshotResult.lastResult)
					{
						var relatedUri:String = filenameToRelatedObselUri(s.filename);
						var relatedObsel:Obsel = theBase.get(relatedUri) as Obsel;
						
						if(relatedObsel)
						{
							s.traceUri = relatedObsel.trace.uri;
							s.time = relatedObsel.begin;
						}
					}
					
					screenshotService.commit();
				}
			}
			
			
			public function filenameToRelatedObselUri(fn:String):String
			{
				
				
				fn = StringUtil.trim(fn);
					
				var r:Array = fn.match(/\/so-(.*)\.png$/);
				if(r && r.length > 1)
					return r[1];
				else 
					return null;
			}
			
			
			protected function comboBox_creationCompleteHandler(event:FlexEvent):void
			{
				getAllTraceResult.token = traceService.getAllTrace();
				getAllTimelineResult.token = timelineService.getAllTimeline();
			}
			

			
			protected function voTimelineBox_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				getAllTimelineResult.token = timelineService.getAllTimeline();
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:CallResponder id="getAllScreenshotResult"/>
		<screenshotservice:ScreenshotService id="screenshotService"
											 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
											 showBusyCursor="true"/>
		<s:CallResponder id="getAllTraceResult"/>
		<traceservice:TraceService id="traceService"
								   fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
								   showBusyCursor="true"/>
		<s:CallResponder id="getAllTimelineResult"/>
		<timelineservice:TimelineService id="timelineService"
										 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
										 showBusyCursor="true"/>
	</fx:Declarations>

	<mx:TabNavigator x="0" y="0" width="100%" height="100%">
		<s:NavigatorContent width="100%" height="100%" label="Timelines">
			<timelineManager:TimelineManager/>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="Medias">
			<media:MediaManager/>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="screenshots">
			<s:DataGrid id="dataGrid" left="10" right="10" bottom="10" height="50%"
						creationComplete="dataGrid_creationCompleteHandler(event)"
						requestedRowCount="4">
				<s:columns>
					<s:ArrayList>
						<s:GridColumn dataField="id" headerText="id"></s:GridColumn>
						<s:GridColumn dataField="filename" headerText="filename"></s:GridColumn>
						<s:GridColumn dataField="traceUri" headerText="traceUri"></s:GridColumn>
						<s:GridColumn dataField="time" headerText="time"></s:GridColumn>
					</s:ArrayList>
				</s:columns>
				<s:typicalItem>
					<fx:Object id="id1" filename="filename1" time="time1" traceUri="traceUri1"></fx:Object>
				</s:typicalItem>
				<s:AsyncListView list="{getAllScreenshotResult.lastResult}"/>
			</s:DataGrid>
			<s:Button id="enrich_btn" x="10" y="10" label="Enrich with loaded traces"
					  click="enrich_btn_clickHandler(event)"/>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="Traces">
			<trace:TraceExplorer x="0" y="10" theTraceBase="{theBase}" theTtlLoader="{theTraceLoader}" theModel="{theModel}"/>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="Une timeline">
			<test:timelineTest left="10" right="10" top="50" bottom="10" theTraceBase="{theBase}" theVOTrace="{cb_TraceDemo.selectedItem as VOTrace}">
			</test:timelineTest>
			<s:ComboBox id="cb_TraceDemo" x="0" y="0" width="240"
						creationComplete="comboBox_creationCompleteHandler(event)"
						labelField="uri">
				<s:AsyncListView list="{getAllTraceResult.lastResult}"/>
			</s:ComboBox>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="Timeline">
			<timeline:TimelineWorkSpace left="0" right="0" top="30" bottom="0" theTraceBase="{theBase}" theModel="{theModel}" voTimeline="{voTimelineComboBox.selectedItem as Timeline}"
										theTtlLoader="{theTraceLoader}">
			</timeline:TimelineWorkSpace>
			<s:ComboBox id="voTimelineComboBox" x="10" y="-1"
						creationComplete="voTimelineBox_creationCompleteHandler(event)"
						labelField="title" >
				<s:AsyncListView list="{getAllTimelineResult.lastResult}"/>
			</s:ComboBox>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="Visualisation temps verticale">
		</s:NavigatorContent>
	</mx:TabNavigator>

</s:WindowedApplication>
